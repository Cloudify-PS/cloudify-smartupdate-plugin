plugins:
  cloudify_smart_update:
    executor: central_deployment_agent
    package_name: cloudify-smartupdate-plugin
    package_version: '1.1'


workflows:
  smart_update:
    mapping: cloudify_smart_update.plugin.workflows.smart_update
    parameters: &smart_update_parameters
      update_id:
        default: ~
      skip_install:
        default: false
      skip_uninstall:
        default: false
      added_instance_ids:
        default: []
      added_target_instances_ids:
        default: []
      removed_instance_ids:
        default: []
      remove_target_instance_ids:
        default: []
      modified_entity_ids:
        default: {}
      extended_instance_ids:
        default: []
      extend_target_instance_ids:
        default: []
      reduced_instance_ids:
        default: []
      reduce_target_instance_ids:
        default: []
      ignore_failure:
        default: false
        type: boolean
      install_first:
        default: false
        type: boolean
      node_instances_to_reinstall:
        default: []
      central_plugins_to_install:
        default: ~
      central_plugins_to_uninstall:
        default: ~
      update_plugins:
        default: true
      preupdate:
        default: true
      update:
        default: true
      postupdate:
        default: true
  smart_execute_preupdate:
    mapping: cloudify_smart_update.plugin.workflows.smart_update
    parameters:
      <<: *smart_update_parameters
      skip_install:
        default: true
      skip_uninstall:
        default: true
      preupdate:
        default: true
      update:
        default: false
      postupdate:
        default: false
  smart_execute_update:
    mapping: cloudify_smart_update.plugin.workflows.smart_update
    parameters:
      <<: *smart_update_parameters
      preupdate:
        default: false
      update:
        default: true
      postupdate:
        default: false
  smart_execute_postupdate:
    mapping: cloudify_smart_update.plugin.workflows.smart_update
    parameters:
      <<: *smart_update_parameters
      skip_install:
        default: true
      skip_uninstall:
        default: true
      preupdate:
        default: false
      update:
        default: false
      postupdate:
        default: true

data_types:

  cloudify.datatypes.smart_update.Blueprint:
    properties:
      external_resource:
        description: >
          Use external resource.
        default: false
      id:
        description: >
          This is the blueprint that the deployment node is a proxy to.
        required: false
      main_file_name:
        description: >
          The application blueprint filename. If the blueprint consists many
          imported files this is the main blueprint.
        default: blueprint.yaml
      blueprint_archive:
        description: >
          The URL of a .zip to upload to the manager.
          (Can be skipped if external_resource == True)
        default: ""
        required: true

  cloudify.datatypes.smart_update.ComponentDeployment:
    properties:
      external_resource:
        description: >
          Use external deployment resource.
        type: boolean
        default: false
      id:
        description: >
          This is the deployment ID that the Component's node is connected to.
        type: string
        required: false
      inputs:
        description: >
          The inputs to the deployment.
        type: dict
        default: { }
      logs:
        description: >
          This is a flag for logs and events redirect from the deployment, by default true.
        type: boolean
        required: false
      auto_inc_suffix:
        description: >
          Optional, will add a suffix to the given deployment ID in the form of an auto incremented index.
        type: boolean
        required: false

  cloudify.datatypes.smart_update.Component:
    properties:
      blueprint:
        type: cloudify.datatypes.smart_update.Blueprint
        required: true
      deployment:
        type: cloudify.datatypes.smart_update.ComponentDeployment
        required: true
      executions_start_args:
        description: >
          Optional params for Component executions.
        type: dict
        default: { }

node_types:
  cloudify.nodes.smart_update.Root:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.preupdate:
        prestop: cloudify_smart_update.plugin.tasks.get_operation_name
        stop: cloudify_smart_update.plugin.tasks.get_operation_name
        delete: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.postupdate:
        create: cloudify_smart_update.plugin.tasks.get_operation_name
        configure: cloudify_smart_update.plugin.tasks.get_operation_name
        start: cloudify_smart_update.plugin.tasks.get_operation_name
        poststart: cloudify_smart_update.plugin.tasks.get_operation_name

  cloudify.nodes.smart_update.Component:
    derived_from: cloudify.nodes.Root
    properties:
      resource_config:
        type: cloudify.datatypes.smart_update.Component
        default: {}
      client:
        description: >
          Cloudify HTTP client configuration,
          if empty the current Cloudify manager client will be used.
        type: cloudify.datatypes.RemoteCloudifyManagerClient
        default: {}
      plugins:
        description: >
          Dictionary of plugins to upload,
          which each plugin is in format of:
            plugin-name:
              wagon_path: Url for plugin wagon file,
              plugin_yaml_path: Url for plugin yaml file
        type: dict
        default: {}
      secrets:
        description: >
          Dictionary of secrets to set before deploying Components,
          which each secret is in format of:
            secret-name: value
        type: dict
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: cloudify_smart_update.component.operations.upload_blueprint
        configure:
          implementation: cloudify_smart_update.component.operations.create
        start:
          implementation: cloudify_smart_update.component.operations.execute_start
          inputs:
            workflow_id:
              type: string
              default: install
            timeout:
              description: How long (in seconds) to wait for execution to finish before timing out.
              type: integer
              default: 1800
            interval:
              description: Polling interval (seconds).
              type: integer
              default: 10
        stop:
          implementation: cloudify_smart_update.component.operations.execute_start
          inputs:
            workflow_id:
              default: uninstall
            resource_config:
              default:
                blueprint: { get_property: [ SELF, resource_config, blueprint ] }
                deployment: { get_property: [ SELF, resource_config, deployment ] }
                executions_start_args:
                  allow_custom_parameters: true
        delete:
          implementation: cloudify_smart_update.component.operations.delete
      cloudify.interfaces.preupdate:
        prestop:
          implementation: cloudify_smart_update.component.operations.execute_start
          inputs:
            workflow_id:
              default: smart_execute_preupdate
        stop: { }
        delete: { }
      cloudify.interfaces.update:
        prepare: { }
        update:
          implementation: cloudify_smart_update.component.operations.execute_deployment_update
          inputs:
            resource_config:
              default:
                blueprint: { get_property: [ SELF, resource_config, blueprint ] }
                deployment: { get_property: [ SELF, resource_config, deployment ] }
                executions_start_args:
                  blueprint_id: { get_property: [ SELF, resource_config, blueprint, id ] }
                  skip_install: False
                  skip_uninstall: False
                  skip_reinstall: False
                  force: True
                  ignore_failure: False
                  install_first: False
                  inputs: { get_property: [ SELF, resource_config, deployment, inputs ] }
                  reinstall_list: [ ]
                  workflow_id: smart_execute_update
        cleanup: { }
      cloudify.interfaces.postupdate:
        create: { }
        configure: { }
        start: { }
        poststart:
          implementation: cloudify_smart_update.component.operations.execute_start
          inputs:
            workflow_id:
              default: smart_execute_postupdate


  cloudify.nodes.smart_update.ServiceComponent:
    derived_from: cloudify.nodes.smart_update.Component


relationships:
  cloudify.relationships.smart_update.connected_to:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_preupdate:
        unlink: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_postupdate:
        preconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        postconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        establish: cloudify_smart_update.plugin.tasks.get_operation_name
    target_interfaces:
      cloudify.interfaces.relationship_preupdate:
        unlink: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_postupdate:
        preconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        postconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        establish: cloudify_smart_update.plugin.tasks.get_operation_name

  cloudify.relationships.smart_update.depends_on:
    derived_from: cloudify.relationships.depends_on
    source_interfaces:
      cloudify.interfaces.relationship_preupdate:
        unlink: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_postupdate:
        preconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        postconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        establish: cloudify_smart_update.plugin.tasks.get_operation_name
    target_interfaces:
      cloudify.interfaces.relationship_preupdate:
        unlink: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_postupdate:
        preconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        postconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        establish: cloudify_smart_update.plugin.tasks.get_operation_name

  cloudify.relationships.smart_update.contained_in:
    derived_from: cloudify.relationships.contained_in
    source_interfaces:
      cloudify.interfaces.relationship_preupdate:
        unlink: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_postupdate:
        preconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        postconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        establish: cloudify_smart_update.plugin.tasks.get_operation_name
    target_interfaces:
      cloudify.interfaces.relationship_preupdate:
        unlink: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.relationship_postupdate:
        preconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        postconfigure: cloudify_smart_update.plugin.tasks.get_operation_name
        establish: cloudify_smart_update.plugin.tasks.get_operation_name
