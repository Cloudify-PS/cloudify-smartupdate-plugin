tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://cloudify.co/spec/cloudify/4.6/types.yaml
  - plugin:cloudify-smartupdate-plugin?version=1.0
  - plugin:cloudify-openstack-plugin?version=3.2.9


dsl_definitions:

  client_config: &client_config
    username: { get_secret: username }
    password: { get_secret: password }
    project_name: { get_secret: project_name }
    auth_url: { get_secret: auth_url }
    region_name: { get_secret: region_name }
    user_domain_name: { get_secret: user_domain_name }
    project_domain_name: { get_secret: project_domain_name }


inputs:

  instance_name:
    type: string

  port_id:
    type: string


node_templates:

  port:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
      resource_config:
        id: { get_input: port_id }
      use_external_resource: True
    interfaces:
      cloudify.interfaces.lifecycle:
        delete: {}

  instance:
    type: cloudify.nodes.openstack.Server
    properties:
      client_config: *client_config
      agent_config:
        install_method: none
      resource_config:
        name: { get_input: instance_name }
        image_id: fd450d0c-d817-4ee2-834e-4370730d3e5d
        flavor_id: m1.small
        availability_zone: nova
    interfaces:
      cloudify.interfaces.preupdate:
        stop: {}
        delete: {}
      cloudify.interfaces.update:
        update: cloudify_smart_update.plugin.tasks.get_operation_name
      cloudify.interfaces.postupdate:
        create: {}
        configure: {}
        start: openstack.openstack_plugin.resources.compute.server.reboot
    relationships:
      - type: cloudify.relationships.openstack.server_connected_to_port
        target: port
        source_interfaces:
          cloudify.interfaces.relationship_preupdate:
            unlink:
              implementation: openstack.openstack_plugin.resources.network.port.detach
              inputs:
                port_id: { get_attribute: [ TARGET, id ] }
          cloudify.interfaces.relationship_update:
            update: {}
          cloudify.interfaces.relationship_postupdate:
            preconfigure: {}
            postconfigure:
              implementation: openstack.openstack_plugin.resources.network.port.attach
              inputs:
                port_id: { get_attribute: [ TARGET, id ] }
            establish: {}
        target_interfaces:
          cloudify.interfaces.relationship_preupdate:
            unlink: {}
          cloudify.interfaces.relationship_update:
            update: {}
          cloudify.interfaces.relationship_postupdate:
            preconfigure: {}
            postconfigure: {}
            establish: {}


capabilities:

  instance_id:
    value: { get_attribute: [instance, id] }

  instance_name:
    value: { get_attribute: [instance, name] }

  port_id:
    value: { get_attribute: [port, id] }

  port_name:
    value: { get_attribute: [port, name] }
