tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://www.getcloudify.org/spec/cloudify/4.6/types.yaml
  - plugin:cloudify-smartupdate-plugin?version=1.0
  - plugin:cloudify-openstack-plugin?version=<3.0.0


dsl_definitions:

  client_config: &client_config
    username: { get_secret: username }
    password: { get_secret: password }
    project_name: { get_secret: project_name }
    auth_url: { get_secret: auth_url }
    region: { get_secret: region_name }
    user_domain_name: { get_secret: user_domain_name }
    project_domain_name: { get_secret: project_domain_name }


inputs:

  enable_dhcp:
    type: boolean
    default: true

  dns_nameservers:
    default:
      - 8.8.8.8

  allocation_pools:
    default: []

  gateway_ip:
    type: string
    default: 172.16.1.1

  cidr:
    type: string
    default: 172.16.1.0/24

# Option 2 - specify parameters that update port
#node_types:
#  configuration_aware_port:
#    derived_from: cloudify.openstack.nodes.Port
#    properties:
#      subnet:
#        description: Any subnet parametrs
#        default: {}

node_templates:

  network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config

  subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *client_config
      subnet:
        enable_dhcp: { get_input: enable_dhcp }
        dns_nameservers: { get_input: dns_nameservers }
        allocation_pools: { get_input: allocation_pools }
        ip_version: 4
        gateway_ip: { get_input: gateway_ip }
        cidr: { get_input: cidr }
    relationships:
      - type: cloudify.relationships.contained_in
        target: network

# Option 2 - port that can reinstall on specific changes
#  port:
#    type: configuration_aware_port
#    properties:
#      openstack_config: *client_config
#      subnet: # define what changes the port should react to
#        allocation_pools: { get_input: allocation_pools }
#        cidr: { get_input: cidr }
#    relationships:
#      - type: cloudify.relationships.contained_in
#        target: network
#      - type: cloudify.openstack.port_connected_to_subnet
#        target: subnet

  port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *client_config
      port:
        network_id: { get_attribute: [ network, external_id ] } 
        device_owner: copute:nova
    relationships:
      - type: cloudify.relationships.contained_in
        target: subnet
      - type: cloudify.relationships.connected_to
        target: network

capabilities:
  network_id:
    value: { get_attribute: [network, external_id] }

  subnet_id:
    value: { get_attribute: [subnet, external_id] }

  port_id:
    value: { get_attribute: [port, external_id] }
