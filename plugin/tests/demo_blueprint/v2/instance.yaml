tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://cloudify.co/spec/cloudify/4.6/types.yaml
  - plugin:cloudify-smartupdate-plugin?version=1.0
  - plugin:cloudify-openstack-plugin?version=<3.0.0


dsl_definitions:

  client_config: &client_config
    username: { get_secret: username }
    password: { get_secret: password }
    project_name: { get_secret: project_name }
    auth_url: { get_secret: auth_url }
    region: { get_secret: region_name }
    user_domain_name: { get_secret: user_domain_name }
    project_domain_name: { get_secret: project_domain_name }

 

inputs:

  port_id:
    type: string

  image_id:
    type: string

  flavor_id:
    type: string

  availability_zone:
    type: string

node_templates:

  port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *client_config
      resource_id: { get_input: port_id }
      use_external_resource: True
    interfaces:
      cloudify.interfaces.preupdate:
        stop: {}
        delete: 
          implementation: openstack.neutron_plugin.port.delete
          inputs:
            resource_id: { get_property: [ SELF, resource_id ] }
 
  instance:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *client_config
      agent_config:
        install_method: none
      server:
        availability_zone: { get_input: availability_zone }
      image: { get_input: image_id }
      flavor: { get_input: flavor_id }
    interfaces:
      cloudify.interfaces.preupdate:
        stop: 
          implementation: openstack.nova_plugin.server.stop
          inputs:
            resource_id: { get_property: [ SELF, resource_id ] }
        delete: {}
      cloudify.interfaces.update:
        update: {}
      cloudify.interfaces.postupdate:
        create: {}
        configure: {}
        start:
          implementation: openstack.nova_plugin.server.start
          inputs:
            start_retry_interval: 30
            resource_id: { get_property: [ SELF, resource_id ] }
    relationships:
      - type: cloudify.openstack.server_connected_to_port
        target: port
        source_interfaces:
          cloudify.interfaces.relationship_preupdate:
            unlink:
              implementation: openstack.neutron_plugin.port.detach
          cloudify.interfaces.relationship_update:
            update: {}
          cloudify.interfaces.relationship_postupdate:
            preconfigure: {}
            postconfigure:
              implementation: openstack.neutron_plugin.port.attach
            establish:  {}
        target_interfaces:
          cloudify.interfaces.relationship_preupdate:
            unlink: {}
          cloudify.interfaces.relationship_update:
            update: {}
          cloudify.interfaces.relationship_postupdate:
            preconfigure: {}
            postconfigure: {}
            establish: {}


capabilities:

  instance_id:
    value: { get_attribute: [instance, external_id] }

  port_id:
    value: { get_attribute: [port, external_id] }
